{
    "references": [{
        "path": "./tsconfig.node.json"
    }],
    "extends": "./node_modules/@vue/tsconfig/tsconfig.dom.json",
    "include": [
        "env.d.ts",
        "app/src/**/*",
        "app/src/**/*.json",
        "app/src/**/*.ts",
        "app/src/**/*.vue"
    ],

    /* https://www.typescriptlang.org/tsconfig */
    "compilerOptions": {

        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        * Type Checking */
        "allowUnreachableCode": false, // This is not the concern of a compiler -- please use a linter to detect this.
        "allowUnusedLabels": false, // This is not the concern of a compiler -- please use a linter to detect this.
        "alwaysStrict": true,
        "exactOptionalPropertyTypes": false, // This is excessive.  TypeScript should just change `?:` to mean `|void` instead of `|undefined`, and then there's no problem.
        "noFallthroughCasesInSwitch": false, // This is not the concern of a compiler -- please use a linter to detect this.
        "noImplicitAny": true,
        "noImplicitOverride": true,
        "noImplicitReturns": true,
        "noImplicitThis": true,
        "noPropertyAccessFromIndexSignature": true,
        "noUncheckedIndexedAccess": true,
        "noUnusedLocals": true, // This is not the concern of a compiler -- please use a linter to detect this.
        "noUnusedParameters": true, // This is not the concern of a compiler -- please use a linter to detect this.
        "strict": true,
        //NOTE:  The strict-mode settings are omitted here, since they are implicit in the above.

        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        * Modules */
        "allowImportingTsExtensions": true,
        "allowUmdGlobalAccess": false,
        "baseUrl": ".",
        "module": "ESNext",
        "moduleResolution": "bundler",
        // "moduleSuffixes": null,
        "noResolve": false,
        "paths": {
            "@/*": [
                "./app/src/*"
            ]
        },
        "resolveJsonModule": true,
        // "rootDir": [],
        // "rootDirs": [],
        // "typeRoots": [],
        // "types": [],

        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        * Emit */
        // "declaration": null,
        // "declarationDir": null,
        // "declarationMap": null,
        "downlevelIteration": true,
        // "emitBOM": false,
        "emitDeclarationOnly": false,
        "importHelpers": true,
        // "inlineSourceMap": false,
        // "inlineSources": false,
        // "mapRoot": null,
        "newLine": "LF",
        "noEmit": true,
        // "noEmitHelpers": false,
        // "noEmitOnError": false,
        // "outDir": "dist",
        // "outFile": null,
        // "preserveConstEnums": false,
        "removeComments": true,
        // "sourceMap": true,
        // "sourceRoot": null,
        "stripInternal": true,

        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        * JavaScript Support */
        "allowJs": true,
        "checkJs": true,
        // "maxNodeModuleJsDepth": 0,

        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        * Editor Support */
        // "disableSizeLimit": false,
        // "plugins": null,

        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        * Interop Constraints */
        // "allowSyntheticDefaultImports": false,
        "esModuleInterop": true,
        "forceConsistentCasingInFileNames": true,
        "isolatedModules": true,
        "preserveSymlinks": true,
        "verbatimModuleSyntax": false,

        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        * Backwards Compatibility */
        // "charset": "utf-8",
        // "keyofStringsOnly": true,
        // "noImplicitUseStrict": false,
        "noStrictGenericChecks": false,
        // "out": null,
        "suppressExcessPropertyErrors": false,
        "suppressImplicitAnyIndexErrors": false,

        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        * Language and Environment */
        // "emitDecoratorMetadata": null,
        "experimentalDecorators": true,
        // "jsx": "preserve",
        // "jsxFactory": null,
        // "jsxFragmentFactory": null,
        // "jsxImportSource": null,
        "lib": ["ESNext"],
        // "moduleDetection": "auto",
        // "noLib": false,
        // "reactNamespace": null,
        "target": "ES2022",
        "useDefineForClassFields": true,

        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        * Compiler Diagnostics */
        // "diagnostics": false,
        // "explainFiles": false,
        // "extendedDiagnostics": false,
        // "generateCpuProfile": false,
        // "listEmittedFiles": false,
        // "listFiles": false,
        // "traceResolution": false,

        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        * Projects */
        "composite": true,
        // "disableReferencedProjectLoad": false,
        // "disableSolutionSearching": false,
        // "disableSourceOfProjectReferenceRedirect": false,
        "incremental": true,
        // "tsBuildInfoFile": null,

        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        * Output Formatting */
        "noErrorTruncation": false,
        "preserveWatchOutput": false,
        "pretty": true,

        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        * Completeness */
        // "skipDefaultLibCheck": false,
        // "skipLibCheck": true,

        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        * Command Line */

        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        * Watch Options */
        "assumeChangesOnlyAffectDirectDependencies": false
    }
}
